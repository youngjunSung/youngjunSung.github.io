<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>시멘틱로그</title>
    <link>https://youngjunsung.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>HTML 기초부터 node.js 까지 자바스크립트 풀스택 웹 개발</description>
    <pubDate>Sun, 23 Feb 2020 10:21:13 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>label 태그로 placeholder 대체하기</title>
      <link>https://youngjunsung.github.io/2020/01/13/moving-label/</link>
      <guid>https://youngjunsung.github.io/2020/01/13/moving-label/</guid>
      <pubDate>Mon, 13 Jan 2020 12:00:52 GMT</pubDate>
      <description>
      
        &lt;p&gt;input의 placeholder 는 값이 입력되면 사라지는데 값이 입력 되더라도 폼 위젯의 내용이 표시되어야 할 경우가 있다. 이럴 때 placeholder를 대신해 label를 absolute로 띄워 스크립트로 입력값에 따라 조건부로 제어해주면 된다.&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>input의 placeholder 는 값이 입력되면 사라지는데 값이 입력 되더라도 폼 위젯의 내용이 표시되어야 할 경우가 있다. 이럴 때 placeholder를 대신해 label를 absolute로 띄워 스크립트로 입력값에 따라 조건부로 제어해주면 된다.</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> $user_name = <span class="built_in">document</span>.querySelectorAll(<span class="string">'input'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onFocus</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e.target.parentElement.classList.add(<span class="string">"on"</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(e.target.value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onBlur</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (e.target.value == <span class="string">""</span>) &#123;</span><br><span class="line">    e.target.parentElement.classList.remove(<span class="string">"on"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; $user_name.length; i++) &#123;</span><br><span class="line">  $user_name[i].addEventListener(<span class="string">'focus'</span>, onFocus);</span><br><span class="line">  $user_name[i].addEventListener(<span class="string">'blur'</span>, onBlur);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><iframe scrolling="no" width="100%" height="300" src="//jsfiddle.net/xdvtfr5a/2/embedded/html,css,result/light" frameborder="0" allowfullscreen></iframe>]]></content:encoded>
      
      <comments>https://youngjunsung.github.io/2020/01/13/moving-label/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo 블로그 검색엔진최적화(SEO) 방법</title>
      <link>https://youngjunsung.github.io/2019/12/06/hexo-blog-SEO/</link>
      <guid>https://youngjunsung.github.io/2019/12/06/hexo-blog-SEO/</guid>
      <pubDate>Fri, 06 Dec 2019 08:59:20 GMT</pubDate>
      <description>
      
        &lt;p&gt;티스토리는 별도 설정 없이 검색엔진에 자동으로 노출이 되었던 걸로 기억하는데 (구글검색) 헥소 블로그는 플러그인을 통해서 SEO가 가능하다&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>티스토리는 별도 설정 없이 검색엔진에 자동으로 노출이 되었던 걸로 기억하는데 (구글검색) 헥소 블로그는 플러그인을 통해서 SEO가 가능하다</p><a id="more"></a><h2 id="설치-플러그인-목록"><a href="#설치-플러그인-목록" class="headerlink" title="설치 플러그인 목록"></a>설치 플러그인 목록</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-auto-canonical</span><br><span class="line">npm install --save hexo-autonofollow</span><br><span class="line">npm install --save hexo-generator-feed</span><br><span class="line">npm install --save hexo-generator-seo-friendly-sitemap</span><br><span class="line">npm install --save hexo-generator-robotstxt</span><br></pre></td></tr></table></figure><h3 id="config-yml-파일에-추가"><a href="#config-yml-파일에-추가" class="headerlink" title="_config.yml 파일에 추가"></a>_config.yml 파일에 추가</h3><p>루트 폴더(테마폴더x)에 있는 _config.yml 파일에 다음과 같이 작성한다.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nofollow:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">exclude1.com</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">exclude2.com</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">rss2</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">rss2.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line">  <span class="attr">tag:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">category:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">robotstxt:</span></span><br><span class="line">  <span class="attr">useragent:</span> <span class="string">"*"</span></span><br><span class="line">  <span class="attr">allow:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">https://youngjunsung.github.io/sitemap.xml</span></span><br></pre></td></tr></table></figure><h3 id="html-head에-추가"><a href="#html-head에-추가" class="headerlink" title="html head에 추가"></a>html head에 추가</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ejs --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">autoCanonical</span>(<span class="attr">config</span>, <span class="attr">page</span>) %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jade --&gt;</span></span><br><span class="line">| !&#123; autoCanonical(config, page) &#125;</span><br></pre></td></tr></table></figure><h3 id="검색엔진에-등록하기"><a href="#검색엔진에-등록하기" class="headerlink" title="검색엔진에 등록하기"></a>검색엔진에 등록하기</h3><h4 id="구글"><a href="#구글" class="headerlink" title="구글"></a>구글</h4><p>색인 &gt; sitemaps 에서 rss2.xml과 sitemap.xml 파일을 제출한다.</p><h3 id="네이버"><a href="#네이버" class="headerlink" title="네이버"></a>네이버</h3><p>사이트 인증 후 rss2.xml과 sitemap.xml 파일을 제출한다.</p><h3 id="다음"><a href="#다음" class="headerlink" title="다음"></a>다음</h3><p>사이트 정보만 입력해주면 된다.</p>]]></content:encoded>
      
      <comments>https://youngjunsung.github.io/2019/12/06/hexo-blog-SEO/#disqus_thread</comments>
    </item>
    
    <item>
      <title>babel를 사용해서 es6 컴파일하기</title>
      <link>https://youngjunsung.github.io/2019/12/06/babel-for-es6/</link>
      <guid>https://youngjunsung.github.io/2019/12/06/babel-for-es6/</guid>
      <pubDate>Fri, 06 Dec 2019 07:30:27 GMT</pubDate>
      <description>
      
        &lt;p&gt;현재 es6가 많이 이용되고 있긴 하나 브라우저가 es6의 모든 기능을 지원하는 것은 아니다. 그래서 babel이라는 트랜트컴파일러를 이용해 es5로 변환해서 배포 해야한다. 이 글에서는 gulp를 활용한 babel 사용법을 정리해본다.&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>현재 es6가 많이 이용되고 있긴 하나 브라우저가 es6의 모든 기능을 지원하는 것은 아니다. 그래서 babel이라는 트랜트컴파일러를 이용해 es5로 변환해서 배포 해야한다. 이 글에서는 gulp를 활용한 babel 사용법을 정리해본다.</p><a id="more"></a><h2 id="기본-프로젝트-구조"><a href="#기본-프로젝트-구조" class="headerlink" title="기본 프로젝트 구조"></a>기본 프로젝트 구조</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">├─ .babelrc</span><br><span class="line">├─ gulpfile.js</span><br><span class="line">├─ package.json</span><br><span class="line">└─ src</span><br><span class="line">   └─ js</span><br><span class="line">      └─ lib.js</span><br></pre></td></tr></table></figure><h2 id="설치목록"><a href="#설치목록" class="headerlink" title="설치목록"></a>설치목록</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g gulp</span><br><span class="line">npm install --save-dev gulp gulp-babel</span><br><span class="line">npm install --save-dev @babel/preset-env</span><br><span class="line">npm install --save-dev @babel/core</span><br><span class="line">npm install --save-dev gulp-sourcemaps</span><br></pre></td></tr></table></figure><h3 id="gulp"><a href="#gulp" class="headerlink" title="gulp"></a>gulp</h3><p>gulp 명령어로 gulpfile.js를 실행할 수 있다</p><h3 id="gulp-babel"><a href="#gulp-babel" class="headerlink" title="gulp-babel"></a>gulp-babel</h3><p>gulp를 이용해 babel을 사용할 수 있게 해주는 패키지다</p><h3 id="babel-preset-env"><a href="#babel-preset-env" class="headerlink" title="@babel/preset-env"></a>@babel/preset-env</h3><p>최신 javascript를 변환해 줄 수 있는 패키지다.</p><h3 id="babel-core"><a href="#babel-core" class="headerlink" title="@babel/core"></a>@babel/core</h3><p>gulp-babel의 peer dependency라고 하는데 뭔 뜻인지 모르겠다. 일단 필요하니까 설치한다</p><h3 id="gulp-sourcemaps"><a href="#gulp-sourcemaps" class="headerlink" title="gulp-sourcemaps"></a>gulp-sourcemaps</h3><p>변환된 코드와 변환되기 전 코드를 매핑해주는 패키지</p><p>그리고 프로젝트 폴더에 .babelrc 파일을 생성하고 다음과 같이 작성한다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [<span class="string">"@babel/preset-env"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="es6코드-작성"><a href="#es6코드-작성" class="headerlink" title="es6코드 작성"></a>es6코드 작성</h2><p>이제 es6코드를 src/js/lib.js 에 작성한다</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sum = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">3</span>, <span class="number">4</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sentences = [</span><br><span class="line">  &#123; <span class="attr">subject</span>: <span class="string">"JavaScript"</span>, <span class="attr">verb</span>: <span class="string">"is"</span>, <span class="attr">object</span>: <span class="string">"great"</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">subject</span>: <span class="string">"papago"</span>, <span class="attr">verb</span>: <span class="string">"are"</span>, <span class="attr">object</span>: <span class="string">"large"</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> say = <span class="function">(<span class="params">&#123; subject, verb, object &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;subject&#125;</span><span class="subst">$&#123;verb&#125;</span><span class="subst">$&#123;object&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// sentence 배열 내에 있는 각 객체별로 subject, verb, object를 연결해 출력</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> s <span class="keyword">of</span> sentences) &#123;</span><br><span class="line">  say(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>노드를 이용해 코드를 먼저 실행해본다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node src/js/lib.js</span><br></pre></td></tr></table></figure><p>출력내용</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">JavaScriptisgreat</span><br><span class="line">papagoarelarge</span><br></pre></td></tr></table></figure><h2 id="gulpfile-코드-작성"><a href="#gulpfile-코드-작성" class="headerlink" title="gulpfile 코드 작성"></a>gulpfile 코드 작성</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> babel = <span class="built_in">require</span>(<span class="string">'gulp-babel'</span>);</span><br><span class="line"><span class="keyword">var</span> sourcemaps = <span class="built_in">require</span>(<span class="string">'gulp-sourcemaps'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'babel'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/**/*.js'</span>)</span><br><span class="line">    .pipe(sourcemaps.init())</span><br><span class="line">    .pipe(babel())</span><br><span class="line">    .pipe(sourcemaps.write(<span class="string">'./'</span>, &#123;<span class="attr">sourceRoot</span>: <span class="string">'../src'</span>&#125;))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'dist'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'watch'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  gulp.watch(<span class="string">'src/**/*.js'</span>,gulp.series(<span class="string">'babel'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>자세한 설명은 생략한다<br>이제 gulp 명령어로 babel을 실행해본다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp babel</span><br></pre></td></tr></table></figure><p>컴파일되어 생성된 dist 폴더</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">├─ .babelrc</span><br><span class="line">├─ gulpfile.js</span><br><span class="line">├─ package.json</span><br><span class="line">├─ dist</span><br><span class="line">   └─ js</span><br><span class="line">      ├─ lib.js</span><br><span class="line">      └─ lib.js.map</span><br><span class="line">└─ src</span><br><span class="line">   └─ js</span><br><span class="line">      └─ lib.js</span><br></pre></td></tr></table></figure><h3 id="gulp-watch-관련-이슈"><a href="#gulp-watch-관련-이슈" class="headerlink" title="gulp watch 관련 이슈"></a>gulp watch 관련 이슈</h3><p>이전에 하던대로  watch 코드를 작성 후 돌려봤는데 오류가 떴다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Error: watching app/css/*.css: watch task has to be a <span class="keyword">function</span> ...</span><br><span class="line">어쩌구</span><br></pre></td></tr></table></figure><p>구글링 해보니 gulp 버전이 업되면서 사용법이 달라졌던 것이다.</p><h4 id="gulp-3-x-버전"><a href="#gulp-3-x-버전" class="headerlink" title="gulp 3.x 버전"></a>gulp 3.x 버전</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  gulp.watch(<span class="string">'app/css/*.css'</span>, [<span class="string">'styles'</span>]);</span><br><span class="line">  gulp.watch(<span class="string">'app/js/*.js'</span>, [<span class="string">'scripts'</span>]);</span><br><span class="line">  gulp.watch(<span class="string">'app/img/*'</span>, [<span class="string">'images'</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="gulp-4-x-버전"><a href="#gulp-4-x-버전" class="headerlink" title="gulp 4.x 버전"></a>gulp 4.x 버전</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  gulp.watch(<span class="string">'app/css/*.css'</span>, gulp.series(<span class="string">'styles'</span>));</span><br><span class="line">  gulp.watch(<span class="string">'app/js/*.js'</span>, gulp.series(<span class="string">'scripts'</span>));</span><br><span class="line">  gulp.watch(<span class="string">'app/img/*'</span>, gulp.series(<span class="string">'images'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://youngjunsung.github.io/2019/12/06/babel-for-es6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo 블로그 기본 사용법</title>
      <link>https://youngjunsung.github.io/2019/11/15/hexo-blog-usage/</link>
      <guid>https://youngjunsung.github.io/2019/11/15/hexo-blog-usage/</guid>
      <pubDate>Fri, 15 Nov 2019 08:53:24 GMT</pubDate>
      <description>
      
        &lt;p&gt;포스팅 방법, 글 수정, hexo 이미지 삽입, 인덱스 페이지 썸네일 설정 방법, 그리고 백업(서브모듈관리) 대해 정리해본다.&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>포스팅 방법, 글 수정, hexo 이미지 삽입, 인덱스 페이지 썸네일 설정 방법, 그리고 백업(서브모듈관리) 대해 정리해본다.</p><a id="more"></a><h2 id="포스팅"><a href="#포스팅" class="headerlink" title="포스팅"></a>포스팅</h2><p> hexo 블로그의 게시글들은 마크다운 파일을 생성하여 작성된다.</p><h3 id="1-draft"><a href="#1-draft" class="headerlink" title="1. draft"></a>1. draft</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new draft <span class="string">'title'</span> // 초안 생성 후 작성</span><br><span class="line">$ hexo publish <span class="string">'title'</span> // post 폴더로 이동</span><br></pre></td></tr></table></figure><h3 id="2-post"><a href="#2-post" class="headerlink" title="2. post"></a>2. post</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new post <span class="string">'title'</span> // 바로 post 폴더에 생성 후 작성</span><br></pre></td></tr></table></figure><p> post 폴더에 있는 md 파일들만 게시글로 올라간다.</p><h2 id="로컬-서버-실행"><a href="#로컬-서버-실행" class="headerlink" title="로컬 서버 실행"></a>로컬 서버 실행</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s -o</span><br></pre></td></tr></table></figure><h2 id="글-수정"><a href="#글-수정" class="headerlink" title="글 수정"></a>글 수정</h2><p>3가지만 진행하면 된다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean // public 폴더 제거</span><br><span class="line">$ hexo generate // 정적 파일 생성 (public 폴더)</span><br><span class="line">$ hexo deploy // Github 페이지 배포</span><br><span class="line"></span><br><span class="line">$ hexo d -g // generate 와 deploy 한번에 진행</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"><span class="comment">## 이미지 삽입</span></span><br><span class="line">보통은 <span class="built_in">source</span>/images 폴더를 생성해서 이미지를 넣어도 되는데</span><br><span class="line">이미지를 포스트 별로 관리하려면 _config.yml 를 다음과 같이 수정한다</span><br><span class="line">```yml</span><br><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>이렇게 되면 포스트 타이틀과 동일한 이름의 폴더가 생성되는데<br>이 폴더에 이미지를 넣으면 된다.<br>그리고 마크다운 파일 본문에 아래 태그를 삽입하면 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img img_name.jpg This is an example image %&#125;</span><br><span class="line">&#123;% asset_img &quot;spaced img_name.jpg&quot; &quot;spaced title&quot; %&#125;</span><br></pre></td></tr></table></figure><h2 id="인덱스-페이지-썸네일-설정"><a href="#인덱스-페이지-썸네일-설정" class="headerlink" title="인덱스 페이지 썸네일 설정"></a>인덱스 페이지 썸네일 설정</h2><p>마크다운 Front-matter 에 coverImage 를 추가하면 된다</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo 블로그 기본 사용법</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  - </span>헥소</span><br><span class="line"><span class="bullet">  - </span>blog</span><br><span class="line"><span class="bullet">  - </span>사용법</span><br><span class="line">date: 2019-11-15 17:53:24</span><br><span class="line">coverImage: img_hexo.jpg</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="hexo-블로그-백업하기-서브모듈이용"><a href="#hexo-블로그-백업하기-서브모듈이용" class="headerlink" title="hexo 블로그 백업하기 - 서브모듈이용"></a>hexo 블로그 백업하기 - 서브모듈이용</h2><p>링크 참고</p><ul><li><a href="https://mishka.kr/2019/06/13/backup/" target="_blank" rel="external nofollow noopener noreferrer">https://mishka.kr/2019/06/13/backup/</a></li><li><a href="https://futurecreator.github.io/2018/07/18/hexo-blog-backup/" target="_blank" rel="external nofollow noopener noreferrer">https://futurecreator.github.io/2018/07/18/hexo-blog-backup/</a></li></ul>]]></content:encoded>
      
      <comments>https://youngjunsung.github.io/2019/11/15/hexo-blog-usage/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo 블로그 만들기 (tranquilpeak 테마 사용)</title>
      <link>https://youngjunsung.github.io/2019/11/15/hexo-blog-initialize/</link>
      <guid>https://youngjunsung.github.io/2019/11/15/hexo-blog-initialize/</guid>
      <pubDate>Fri, 15 Nov 2019 03:29:36 GMT</pubDate>
      <description>
      
        &lt;p&gt;원래는 &lt;a href=&quot;https://cokar.tistory.com/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;티스토리&lt;/a&gt;를 사용하고 있었는데 뭔가 심심해서 node.js 기반 정적 사이트 생성기 hexo를 만들어보았다. 설치부터 배포까지 쉽고 간단하게 가능한데, tranquilpeak 테마 기준으로 작성해보았다.&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>원래는 <a href="https://cokar.tistory.com/" target="_blank" rel="external nofollow noopener noreferrer">티스토리</a>를 사용하고 있었는데 뭔가 심심해서 node.js 기반 정적 사이트 생성기 hexo를 만들어보았다. 설치부터 배포까지 쉽고 간단하게 가능한데, tranquilpeak 테마 기준으로 작성해보았다.</p><a id="more"></a><h2 id="hexo-블로그-프로젝트"><a href="#hexo-블로그-프로젝트" class="headerlink" title="hexo 블로그 프로젝트"></a>hexo 블로그 프로젝트</h2><h3 id="기본-Setup"><a href="#기본-Setup" class="headerlink" title="기본 Setup"></a>기본 Setup</h3><ul><li>node.js, git 설치 후 진행</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g </span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>여기까지 진행했다면 hexo 블로그 초기 셋팅까지 완료된 것이다.</p><h3 id="테마-설치"><a href="#테마-설치" class="headerlink" title="테마 설치"></a>테마 설치</h3><p>먼저 원하는 테마를 <a href="https://hexo.io/themes/" target="_blank" rel="external nofollow noopener noreferrer">여기서</a> 고르고 해당 테마의 저장소를 클론해준다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak.git themes/tranquilpeak</span><br></pre></td></tr></table></figure><p>다른 방법으로는 다운로드 받은 폴더를 themes 폴더에 넣어주어도 된다<br>그리고 블로그 폴더(설치된 테마폴더x)안에 _config.yml 파일이 있는데 내용을 수정해준다.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">tranquilpeak(테마폴더명과</span> <span class="string">동일하게)</span></span><br></pre></td></tr></table></figure><h3 id="주의사항"><a href="#주의사항" class="headerlink" title="주의사항"></a>주의사항</h3><p>tranquilpeak 테마의 경우 추가 작업이 필요한데<br>themes/tranquilpeak 폴더 경로에서</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br><span class="line">$ npm run prod</span><br></pre></td></tr></table></figure><p>까지 진행해야 정상적으로 렌더링 된다.</p><p>이제 로컬에서 확인해봅니다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s -o</span><br></pre></td></tr></table></figure><p>만약 포트가 사용중이라면 다른 걸로 변경해줍니다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s -p 5000</span><br></pre></td></tr></table></figure><h3 id="Github-페이지-배포하기"><a href="#Github-페이지-배포하기" class="headerlink" title="Github 페이지 배포하기"></a>Github 페이지 배포하기</h3><p>Github에 repo를 다음과 같이 생성한다.</p><img src="/2019/11/15/hexo-blog-initialize/img_github.jpg" class title="This is an example image"><ul><li>Repository 이름은 username.github.io</li><li>public 으로 생성</li></ul><p>배포 플러그인 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>_config.yml 설정</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/youngjunSung/youngjunSung.github.io.git</span></span><br></pre></td></tr></table></figure><h2 id="배포"><a href="#배포" class="headerlink" title="배포"></a>배포</h2><p>3가지만 진행하면 된다.</p><pre><code class="bash">$ hexo clean // public 폴더 제거$ hexo generate // 정적 파일 생성 (public 폴더)$ hexo deploy // Github 페이지 배포$ hexo d -g // generate 와 deploy 한번에 진행</code></pre>]]></content:encoded>
      
      <comments>https://youngjunsung.github.io/2019/11/15/hexo-blog-initialize/#disqus_thread</comments>
    </item>
    
    <item>
      <title>HTML 웹 표준과 웹 접근성</title>
      <link>https://youngjunsung.github.io/2019/03/01/html-web-standard-accessibility/</link>
      <guid>https://youngjunsung.github.io/2019/03/01/html-web-standard-accessibility/</guid>
      <pubDate>Fri, 01 Mar 2019 08:35:08 GMT</pubDate>
      <description>
      
        &lt;p&gt;마크업을 할 때 웹 표준을 기반으로 웹 접근성을 고려하며 작업하는 것이 중요하다. 이 포스팅에서는 웹 표준과 웹 접근성에 대해 알아보겠다.&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>마크업을 할 때 웹 표준을 기반으로 웹 접근성을 고려하며 작업하는 것이 중요하다. 이 포스팅에서는 웹 표준과 웹 접근성에 대해 알아보겠다.</p><a id="more"></a><h2 id="웹-표준이란"><a href="#웹-표준이란" class="headerlink" title="웹 표준이란"></a>웹 표준이란</h2><p>구글링으로 웹 표준을 검색해보면 대부분 이런게 설명하곤 한다.</p><blockquote><p>‘브라우저 종류 및 버전에 따른 기능 차이에 대하여 호환이 가능하도록 .. 웹페이지가 똑같이 보이고 .. 어쩌구’ </p></blockquote><p>도무지 한번에 와닿지 않아서 조금 더 쉽게 풀어서 정리해보았다.</p><blockquote><p>웹 표준이란, 웹 표준화 단체(W3C)가 권고한 표준안을 뜻하며 <b>용도에 맞는 태그 사용</b>과 <b>CSS를 분리(구조와 표현의 분리)</b>하여 작업하는 것을 말한다. </p></blockquote><p>아래 링크에서 자세한 내용을 확인할 수 있다.</p><ul><li><a href="https://www.w3.org/TR/html5-author/" target="_blank" rel="external nofollow noopener noreferrer">https://www.w3.org/TR/html5-author/</a></li><li><a href="https://www.koreahtml5.kr/front/reference/referenceList.do?bbsId=BBS_00000000002" target="_blank" rel="external nofollow noopener noreferrer">https://www.koreahtml5.kr/front/reference/referenceList.do?bbsId=BBS_00000000002</a></li></ul><p>마크업 완료 후 웹 표준을 준수했는지 아래 링크에서 확인 가능하다.</p><ul><li><a href="https://validator.w3.org/" target="_blank" rel="external nofollow noopener noreferrer">https://validator.w3.org/</a></li><li><a href="http://jigsaw.w3.org/css-validator/" target="_blank" rel="external nofollow noopener noreferrer">http://jigsaw.w3.org/css-validator/</a></li><li><a href="https://www.koreahtml5.kr/front/diagnosis/diagnosticUrl.do" target="_blank" rel="external nofollow noopener noreferrer">https://www.koreahtml5.kr/front/diagnosis/diagnosticUrl.do</a></li></ul><h2 id="웹-접근성이란"><a href="#웹-접근성이란" class="headerlink" title="웹 접근성이란"></a>웹 접근성이란</h2><p>사람의 신체 조건과 상관 없이 모든 환경에서 웹 콘텐츠를 이용할 수 있어야 하는 것을 말한다.<br>간략하게 설명하면 다음과 같다.</p><ul><li>스크린리더를 통해 음성으로 웹 페이지 내용을 들을 수 있어야한다.</li><li>모든 기능은 키보드만으로 사용할 수 있어야 한다.</li><li>명료성, 가독성, 콘텐츠의 논리성, 멀티미디어 대체 수단을 고려해야한다.</li></ul><p>진단 사이트</p><ul><li><a href="http://www.kwacc.or.kr/WACertificate/Standard" target="_blank" rel="external nofollow noopener noreferrer">한국웹접근성평가센터 - 체크리스트</a></li><li><a href="https://nuli.navercorp.com/sharing/fe/nwax" target="_blank" rel="external nofollow noopener noreferrer">NHN Web Accessibility eXtension</a></li><li><a href="https://www.wah.or.kr:444/Participation/online-wah.asp" target="_blank" rel="external nofollow noopener noreferrer">웹 접근성 연구소</a></li></ul>]]></content:encoded>
      
      <comments>https://youngjunsung.github.io/2019/03/01/html-web-standard-accessibility/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CSS input placeholder 컬러 변경하기</title>
      <link>https://youngjunsung.github.io/2018/11/30/css-input-placeholder-color/</link>
      <guid>https://youngjunsung.github.io/2018/11/30/css-input-placeholder-color/</guid>
      <pubDate>Thu, 29 Nov 2018 15:42:17 GMT</pubDate>
      <description>
      
        &lt;p&gt;디자인에 따라 placeholder color 를 변경해야하는 경우가 있는데 다음과 같은 css로 수정할 수 있다.&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>디자인에 따라 placeholder color 를 변경해야하는 경우가 있는데 다음과 같은 css로 수정할 수 있다.</p><a id="more"></a><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">  &amp;::placeholder &#123;</span><br><span class="line">    color: <span class="number">#f5747f</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>; <span class="comment">/* Firefox */</span></span><br><span class="line">  &#125;</span><br><span class="line">  &amp;:-ms-input-placeholder &#123;</span><br><span class="line">    color: <span class="number">#f5747f</span>; <span class="comment">/* Internet Explorer 10-11 */</span></span><br><span class="line">  &#125;</span><br><span class="line">  &amp;::-ms-input-placeholder &#123;</span><br><span class="line">    color: <span class="number">#f5747f</span> <span class="meta">!important</span>; <span class="comment">/* Microsoft Edge */</span></span><br><span class="line">  &#125;</span><br><span class="line">  &amp;::-webkit-input-placeholder &#123;</span><br><span class="line">    color: <span class="number">#f5747f</span>; <span class="comment">/* Safari, Chrome */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><iframe scrolling="no" width="100%" height="300" src="//jsfiddle.net/8osd9yc6/6/embedded/html,css,result/light" frameborder="0" allowfullscreen></iframe>]]></content:encoded>
      
      <comments>https://youngjunsung.github.io/2018/11/30/css-input-placeholder-color/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CSS select 화살표 지우는 방법</title>
      <link>https://youngjunsung.github.io/2018/11/21/css-select-remove-arrow/</link>
      <guid>https://youngjunsung.github.io/2018/11/21/css-select-remove-arrow/</guid>
      <pubDate>Wed, 21 Nov 2018 07:47:32 GMT</pubDate>
      <description>
      
        &lt;p&gt;셀렉트 박스 디자인에 따라 화살표를 수정해야하는 경우가 있는데, 아예 없앤 후 새로 요소를 추가해서 만들어야 한다. (border or 배경이미지로)&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>셀렉트 박스 디자인에 따라 화살표를 수정해야하는 경우가 있는데, 아예 없앤 후 새로 요소를 추가해서 만들어야 한다. (border or 배경이미지로)</p><a id="more"></a><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">select</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">  <span class="comment">/* for chrome, safari */</span></span><br><span class="line">  <span class="attribute">-moz-appearance</span>: none;</span><br><span class="line">  <span class="comment">/*for firefox*/</span></span><br><span class="line">  <span class="attribute">appearance</span>: none;</span><br><span class="line">  &amp;::-ms-expand &#123;</span><br><span class="line">    <span class="selector-tag">display</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* for ie */</span></span><br><span class="line">  &amp;<span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><iframe scrolling="no" width="100%" height="300" src="//jsfiddle.net/7qgvnwp0/13/embedded/html,css,result/light" frameborder="0" allowfullscreen></iframe>]]></content:encoded>
      
      <comments>https://youngjunsung.github.io/2018/11/21/css-select-remove-arrow/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
